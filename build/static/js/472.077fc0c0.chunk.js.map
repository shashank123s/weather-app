{"version":3,"file":"static/js/472.077fc0c0.chunk.js","mappings":"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","sources":["components/helpers/SnackbarController.tsx","components/helpers/SnackbarControllerSuccess.tsx","pages/searchCity/index.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Alert, Snackbar} from '@mui/material';\nimport {AlertColor} from '@mui/material/Alert/Alert';\n\ninterface props {\n    severity?: AlertColor;\n    message?: string;\n}\n\nfunction SnackbarController({severity = \"error\", message = \"\"}: props) {\n    const [_open, _setOpen]       = useState(false);\n    const [_message, _setMessage] = useState('');\n\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        _setMessage('');\n        _setOpen(false);\n    };\n\n    useEffect(() => {\n        _setMessage(message);\n        _setOpen(message !== '');\n    }, [message]);\n\n    return (\n        <Snackbar open={_open} onClose={handleClose} anchorOrigin={{horizontal: \"center\", vertical: \"bottom\"}} autoHideDuration={3000} sx={{minWidth: '25rem'}}>\n            <Alert onClose={handleClose} severity={severity} variant={\"filled\"} sx={{width: '100%'}}>\n                {_message}\n            </Alert>\n        </Snackbar>\n    );\n}\n\nexport default SnackbarController;","import React, {useEffect, useState} from 'react';\nimport {Alert, Snackbar} from '@mui/material';\nimport {AlertColor} from '@mui/material/Alert/Alert';\n\ninterface props {\n    severity?: AlertColor;\n    message?: string;\n}\n\nfunction SnackbarControllerSuccess({severity = \"success\", message = \"\"}: props) {\n    const [_open, _setOpen]       = useState(false);\n    const [_message, _setMessage] = useState('');\n\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        _setMessage('');\n        _setOpen(false);\n    };\n\n    useEffect(() => {\n        _setMessage(message);\n        _setOpen(message !== '');\n    }, [message]);\n\n    return (\n        <Snackbar open={_open} onClose={handleClose} anchorOrigin={{horizontal: \"center\", vertical: \"bottom\"}} autoHideDuration={3000} sx={{minWidth: '25rem'}}>\n            <Alert onClose={handleClose} severity={severity} variant={\"filled\"} sx={{width: '100%'}}>\n                {_message}\n            </Alert>\n        </Snackbar>\n    );\n}\n\nexport default SnackbarControllerSuccess;","\nimport { LoadingButton } from \"@mui/lab\";\nimport { TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport SnackbarController from \"../../components/helpers/SnackbarController\";\nimport SnackbarControllerSuccess from \"../../components/helpers/SnackbarControllerSuccess\";\nimport weather from '../../assets/images/myweather.png'\n\n\nfunction Index() {\n\n  const apiKey = \"f56f24967aaf51182d1d4df628297c6d\"\n  const [inputCity, setInputCity] = useState(\"\")\n  const [data, setData] = useState<any>({})\n  const [_snackMessage, _setSnackMessage] = useState('');\n  const [_snackMessageSuccess, _setSnackMessageSuccess] = useState('');\n\n\n  const getWetherDetails = (cityName: any) => {\n    if (!cityName) return\n    const apiURL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + cityName + \"&appid=\" + apiKey\n    axios.get(apiURL).then((res) => {\n      console.log(\"response\", res.data)\n      setData(res.data)\n    }).catch((err) => {\n      _setSnackMessage(\"please enter correct city name\")\n      console.log(\"err\", err)\n    })\n  }\n\n  const handleChangeInput = (e: any) => {\n    console.log(\"value\", e.target.value)\n    setInputCity(e.target.value)\n  }\n\n  const handleSearch = () => {\n    getWetherDetails(inputCity)\n  }\n\n\n  return (\n    <div>\n      <h2 className=\"heading\">Weather App</h2>\n      <h4>Search Weather of Your City's</h4>\n      <div className=\"my-4\">\n        <div className=\"mt-4\">\n          <TextField type=\"text\" className=\"bg-white\"\n            variant=\"outlined\"\n            label=\"Enter City Name\"\n            value={inputCity}\n            onChange={handleChangeInput} />\n          <div className=\"mt-4\">\n            <LoadingButton\n              type=\"button\"\n              variant=\"contained\"\n              onClick={handleSearch}\n            >Search</LoadingButton>\n          </div>\n        </div>\n      </div>\n\n      {Object.keys(data).length > 0 &&\n        <div className=\"col-md-12 text-center py-4\">\n          <div className=\"shadow rounded--1 bg-white py-4\">\n            <img className=\"weathorIcon\"\n              src={weather} style={{width: \"12rem\" }} />\n\n            <h4 className=\"weathorCity\">\n              {data?.name}\n            </h4>\n            <h5 className=\"weathorTemp\">{((data?.main?.temp) - 273.15).toFixed(2)}Â°C</h5>\n          </div>\n        </div>\n      }\n      <SnackbarController message={_snackMessage} />\n      <SnackbarControllerSuccess message={_snackMessageSuccess} />\n    </div>\n  );\n}\n\nexport default Index;"],"names":["severity","message","useState","_open","_setOpen","_message","_setMessage","handleClose","event","reason","useEffect","open","onClose","anchorOrigin","horizontal","vertical","autoHideDuration","sx","minWidth","variant","width","inputCity","setInputCity","data","setData","_snackMessage","_setSnackMessage","_snackMessageSuccess","className","type","label","value","onChange","e","console","log","target","onClick","cityName","apiURL","axios","then","res","catch","err","getWetherDetails","Object","keys","length","src","weather","style","name","main","temp","toFixed"],"sourceRoot":""}